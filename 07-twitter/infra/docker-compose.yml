services:
  db:
    image: postgres:16
    container_name: twitter-test-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - twitter-test-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  api:
    build:
      context: ../..
      dockerfile: 07-twitter/cmd/server/Dockerfile
    container_name: twitter-api
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "8080:8080"
    networks:
      - twitter-test-network

volumes:
  db-data:


networks:
  twitter-test-network:
    driver: bridge
